disabUniverse = "S1810_C01_001E",
disabEst = "S1810_C02_001E",
lepPerc = "S1601_C05_003E" # PROBLEMATIC
))
rm(list=ls())
library(foreign); library(rgdal)
library(tidycensus); library(tidyverse)
# https://api.census.gov/data/2016/acs/acs5/variables.html
# https://api.census.gov/data/2016/acs/acs5/subject/variables.html
# https://api.census.gov/data/2016/acs/acs5/profile/variables.html
# Unfortunately this only works for 2011-2015 and 2012-2016 ACS.
# I suspect API changes are the issue. May as well only use 2016 then
collect <- get_acs(geography = "tract",
state = c(34,42),
output = "wide",
variables = c(
povUniverse = "S1701_C01_001E",
povEst = "S1701_C01_042E",
femUniverse = "S0101_C01_001E",
femEst = "S0101_C03_001E",
disabUniverse = "S1810_C01_001E",
disabEst = "S1810_C02_001E",
lepUniverse = "S1601_C01_001E",
lepPerc = "S1601_C05_001E"
))
collect2 <- get_acs(geography = "tract",
state = c(34,42),
output = "wide",
variables = c(
ethUniverse = "B03002_001E",
ethEst = "B03002_012E", # Note that this will calc % Hisp. Was this the intent?
youthEst = "B09001_001E",
fornUniverse = "B05012_001E",
fornEst = "B05012_003E"
))
collect3 <- get_acs(geography = "tract",
state = c(34,42),
output = "wide",
variables = c(
olderUniverse = "DP05_0001E", # note that Alex used S0101_C03_001E as universe here
olderEst = "DP05_0025E"
))
# Add youthUniverse column in desired spot
collect2$youthUniverse <- collect2$ethUniverse
collect2 <- collect2[c(1:6, 13, 7:12)]
# Merge across
collect2[c("GEOID", "NAME")] <- NULL; collect3[c("GEOID", "NAME")] <- NULL
collect <- cbind(collect, collect2)
collect <- cbind(collect, collect3)
rm(collect2); rm(collect3)
# Clean up fields
collect <- collect[, -( grep("\\M$" , colnames(collect), perl = TRUE))]
# Get state/county info so we can split df by MSA
collect$st <- substr(collect$GEOID, 1, 2)
collect$cty <- substr(collect$GEOID, 3, 5)
collect$stcty <- paste0(collect$st, collect$cty)
# Subset out DVRPC counties
dvrpc <- c("34005", "34007", "34015", "34021",
"42017", "42029", "42045", "42091", "42101")
collect <- subset(collect, stcty %in% dvrpc)
# Percentages
divisor <- function(i,j) i / j * 100
res <- as.data.frame(mapply(divisor,
collect[seq(4, 18, by = 2)],
collect[seq(3, 17, by = 2)]))
colnames(res) <- gsub("Est", "Perc", colnames(res))
res$GEOID <- collect$GEOID; res$year <- 2016
# Next: Get older data from NHGIS.
# Check out whether you can use 2010 Census API
collect <- get_acs(geography = "tract",
state = c(34,42),
year = 2010,
output = "wide",
variables = c(
povUniverse = "B17024_001E",
povA.2 = "B17024_011E",
povA.3 = "B17024_012E",
povA.4 = "B17024_013E",
povA.5 = "B17024_014E",
povB.2 = "B17024_024E",
povB.3 = "B17024_025E",
povB.4 = "B17024_026E",
povB.5 = "B17024_027E",
povC.2 = "B17024_037E",
povC.3 = "B17024_038E",
povC.4 = "B17024_039E",
povC.5 = "B17024_040E",
povD.2 = "B17024_050E",
povD.3 = "B17024_051E",
povD.4 = "B17024_052E",
povD.5 = "B17024_053E",
povE.2 = "B17024_063E",
povE.3 = "B17024_064E",
povE.4 = "B17024_065E",
povE.5 = "B17024_066E",
povF.2 = "B17024_076E",
povF.3 = "B17024_077E",
povF.4 = "B17024_078E",
povF.5 = "B17024_079E",
povG.2 = "B17024_089E",
povG.3 = "B17024_090E",
povG.4 = "B17024_091E",
povG.5 = "B17024_092E",
povH.2 = "B17024_102E",
povH.3 = "B17024_103E",
povH.4 = "B17024_104E",
povH.5 = "B17024_105E",
povI.2 = "B17024_115E",
povI.3 = "B17024_116E",
povI.4 = "B17024_117E",
povI.5 = "B17024_118E",
povJ.2 = "B17024_128E",
povJ.3 = "B17024_129E",
povJ.4 = "B17024_130E",
povJ.5 = "B17024_131E",
ethUniverse = "B03002_001E",
ethEst = "B03002_012E",
youthEst = "B09001_001E",
fornUniverse = "B05012_001E",
fornEst = "B05012_003E"
))
collect2 <- get_acs(geography = "tract",
state = c(34,42),
year = 2010,
output = "wide",
variables = c(
femUniverse = "S0101_C01_001E",
femEst = "S0101_C03_001E",
lepUniverse = "S1601_C01_001E",
lepEst = "S1601_C03_001E"
))
collect3 <- get_acs(geography = "tract",
state = c(34,42),
year = 2010,
output = "wide",
variables = c(
olderUniverse = "DP05_0001E",
olderEst = "DP05_0025E",
disabUniverse = "DP02_0070E",
disabEst = "DP02_0070E"
))
shiny::runApp('D:/alarson/MapClassificationAutoreporter')
rm(list=ls())
pack <- function(pkg){
newpkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(newpkg))
install.packages(newpkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("foreign", "rgdal", "maptools", "raster")
pack(packages)
blank <- raster(ext = extent(374610.3, 586310.3, 4309335, 4538285),
res = c(50, 50),
crs = CRS("+init=epsg:26918"))
blank
?seq
seq(-100,1000,length.out = 6)
(90032+75266)/6
-75266+27549.67
-47716.33+27549.67
-20166.66+27549.67
7383.01+27549.67
34932.68+27549.67
62482.35+27549.67
# Census data on race and ethnicity have changed over time.
# A = White alone, B = Black alone, C = American Indian alone,
# D = Asian alone, E = Native Hawaiian alone, F = Other,
# G = Two or more, H = White alone, not Hispanic or Latino, I = Hispanic or Latino
# FOR Decennial 2000, I is recoded to H
# ACS data by year and categories available
#       cat
# year  A B D F G H I
# 5     9 9 8 5 0 9 0
# 6     9 9 8 6 4 9 0
# 7     9 9 9 6 5 9 0
# 8     9 9 8 4 6 9 0
# 9     9 9 8 4 5 9 0
# 10    9 9 8 3 7 9 0
# 11    9 9 9 3 8 9 0
# 12    9 9 9 4 7 9 0
# 13    9 9 9 5 8 9 0
# 14    9 9 9 5 8 9 0
# 15    9 9 9 5 7 9 0
# 16    9 9 9 6 7 9 0
# 17    9 9 9 5 8 9 9
library(dplyr); library(tidyr); library(magrittr); library(ggplot2); library(car)
setwd("D:/alarson/TrackingProgress/IncomeTrends/data/acs")
l <- list.files(".")
# Qualifying counties
qct <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
# Median income files
lMed <- subset(l, substr(l, 12, 17) == "B19013")
medInc <- data.frame()
# Population by race / eth. files
lRac <- subset(l, substr(l, 12, 17) == "B01001")
racEth <- data.frame()
# CPI
inf <- read.csv("D:/alarson/TrackingProgress/IncomeTrends/data/bls/inflation.csv")
colnames(inf) <- c("year", "cpi")
inf$year <- as.numeric(substr(inf$year, 3, 4))
for (i in 1:length(lMed)){
temp <- read.csv(lMed[i])
temp <- temp[-1,]
temp <- subset(temp, GEO.id2 %in% qct)
temp$year <- as.numeric(substr(lMed[i], 5, 6))
temp$cat <- substr(lMed[i], 18, 18)
medInc <- rbind(medInc, temp)
}
colnames(medInc)[4:5] <- c("medInc_E", "medInc_M")
for (i in 1:length(lRac)){
temp <- read.csv(lRac[i])
temp <- temp[-1,]
temp <- temp[c(2, 4)]
temp <- subset(temp, GEO.id2 %in% qct)
temp$year <- as.numeric(substr(lRac[i], 5, 6))
temp$cat <- substr(lRac[i], 18, 18)
racEth <- rbind(racEth, temp)
}
colnames(racEth)[2] <- "obs"
racEth$obs <- as.numeric(as.character(racEth$obs))
# add in Decennial
setwd("D:/alarson/TrackingProgress/IncomeTrends/data/decennial")
l <- list.files(".")
lMed <- subset(l, substr(l, 12, 15) == "P152")
add <- data.frame()
for (i in 1:length(lMed)){
temp <- read.csv(lMed[i])
temp <- temp[-1,]
temp <- subset(temp, GEO.id2 %in% qct)
temp$year <- as.numeric(substr(lMed[i], 5, 6))
temp$cat <- substr(lMed[i], 16, 16)
temp$medInc_M <- as.factor(0)
add <- rbind(add, temp)
}
colnames(add)[4] <- "medInc_E"
add$cat <- ifelse(add$cat == "I", "H", add$cat)
medInc <- rbind(medInc, add)
racEth00 <- read.csv("DEC_00_SF1_H009_with_ann.csv"); racEth00 <- racEth00[-1,]
racEth00 %<>%
filter(GEO.id2 %in% qct) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(c(4:18), as.numeric) %>%
mutate_at(c(2), as.factor) %>%
mutate(H = VD03,
A = VD01 + VD10,
B = VD04 + VD11,
C = VD05 + VD12,
D = VD06 + VD13,
E = VD07 + VD14,
F = VD08 + VD15,
year = 0) %>%
gather(cat, obs, A,B,C,D,E,F,H) %>%
select(GEO.id2, obs, year, cat)
racEth <- rbind(racEth, racEth00)
racEth$GEO.id2 <- as.character(racEth$GEO.id2)
medInc$GEO.id2 <- as.character(medInc$GEO.id2)
medInc %<>% left_join(racEth, by = c("GEO.id2", "year", "cat")) %>%
left_join(inf, by = c("year")) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(c(2, 4, 5), as.numeric) %>%
na.omit()
# Adjust for inflation
medInc$medInc_A <- medInc$medInc_E * inf[18,2] / medInc$cpi
# Separate white non-Hispanic from others
t1 <- subset(medInc, cat != "A" & cat != "I")
t1$flag <- ifelse(t1$cat == "H", "White Non-Hispanic", "Minority")
t1L <- split(t1, t1$flag)
t2 <- t1L[[1]] %>%
group_by(year, GEO.id2) %>%
summarize(minorityInc = weighted.mean(medInc_A, obs),
minorityPop = sum(obs))
t3 <- t1L[[2]] %>%
group_by(year, GEO.id2) %>%
summarize(whtNonHispInc = weighted.mean(medInc_A, obs),
whtNonHispPop = sum(obs))
# t2 contains white non-Hispanic vs. minority incomes by county
t2 %<>% left_join(t3, by = c("year", "GEO.id2"))
# append suburban county averages and regional averages
t3 <- rbind(filter(t2, GEO.id2 %in% c(42017, 42029, 42045, 42091)) %>%
group_by(year) %>%
summarize(GEO.id2 = "PA Suburban Counties",
whtNonHispInc = weighted.mean(whtNonHispInc, whtNonHispPop),
minorityInc = weighted.mean(minorityInc, minorityPop)),
filter(t2, GEO.id2 <= 34021) %>%
group_by(year) %>%
summarize(GEO.id2 = "NJ Suburban Counties",
whtNonHispInc = weighted.mean(whtNonHispInc, whtNonHispPop),
minorityInc = weighted.mean(minorityInc, minorityPop)))
t4 <- t2 %>%
group_by(year) %>%
summarize(GEO.id2 = "Region",
whtNonHispInc = weighted.mean(whtNonHispInc, whtNonHispPop),
minorityInc = weighted.mean(minorityInc, minorityPop))
t2 %<>% mutate_at(c(2), as.character)
final <- bind_rows(t2, t3) %>%
bind_rows(., t4)
View(final)
# Census data on race and ethnicity have changed over time.
# A = White alone, B = Black alone, C = American Indian alone,
# D = Asian alone, E = Native Hawaiian alone, F = Other,
# G = Two or more, H = White alone, not Hispanic or Latino, I = Hispanic or Latino
# FOR Decennial 2000, I is recoded to H
# ACS data by year and categories available
#       cat
# year  A B D F G H I
# 5     9 9 8 5 0 9 0
# 6     9 9 8 6 4 9 0
# 7     9 9 9 6 5 9 0
# 8     9 9 8 4 6 9 0
# 9     9 9 8 4 5 9 0
# 10    9 9 8 3 7 9 0
# 11    9 9 9 3 8 9 0
# 12    9 9 9 4 7 9 0
# 13    9 9 9 5 8 9 0
# 14    9 9 9 5 8 9 0
# 15    9 9 9 5 7 9 0
# 16    9 9 9 6 7 9 0
# 17    9 9 9 5 8 9 9
library(dplyr); library(tidyr); library(magrittr); library(ggplot2); library(car)
setwd("D:/alarson/TrackingProgress/IncomeTrends/data/acs")
l <- list.files(".")
# Qualifying counties
qct <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
# Median income files
lMed <- subset(l, substr(l, 12, 17) == "B19013")
medInc <- data.frame()
# Population by race / eth. files
lRac <- subset(l, substr(l, 12, 17) == "B01001")
racEth <- data.frame()
# CPI
inf <- read.csv("D:/alarson/TrackingProgress/IncomeTrends/data/bls/inflation.csv")
colnames(inf) <- c("year", "cpi")
inf$year <- as.numeric(substr(inf$year, 3, 4))
for (i in 1:length(lMed)){
temp <- read.csv(lMed[i])
temp <- temp[-1,]
temp <- subset(temp, GEO.id2 %in% qct)
temp$year <- as.numeric(substr(lMed[i], 5, 6))
temp$cat <- substr(lMed[i], 18, 18)
medInc <- rbind(medInc, temp)
}
colnames(medInc)[4:5] <- c("medInc_E", "medInc_M")
for (i in 1:length(lRac)){
temp <- read.csv(lRac[i])
temp <- temp[-1,]
temp <- temp[c(2, 4)]
temp <- subset(temp, GEO.id2 %in% qct)
temp$year <- as.numeric(substr(lRac[i], 5, 6))
temp$cat <- substr(lRac[i], 18, 18)
racEth <- rbind(racEth, temp)
}
colnames(racEth)[2] <- "obs"
racEth$obs <- as.numeric(as.character(racEth$obs))
# add in Decennial
setwd("D:/alarson/TrackingProgress/IncomeTrends/data/decennial")
l <- list.files(".")
lMed <- subset(l, substr(l, 12, 15) == "P152")
add <- data.frame()
for (i in 1:length(lMed)){
temp <- read.csv(lMed[i])
temp <- temp[-1,]
temp <- subset(temp, GEO.id2 %in% qct)
temp$year <- as.numeric(substr(lMed[i], 5, 6))
temp$cat <- substr(lMed[i], 16, 16)
temp$medInc_M <- as.factor(0)
add <- rbind(add, temp)
}
colnames(add)[4] <- "medInc_E"
add$cat <- ifelse(add$cat == "I", "H", add$cat)
medInc <- rbind(medInc, add)
racEth00 <- read.csv("DEC_00_SF1_H009_with_ann.csv"); racEth00 <- racEth00[-1,]
racEth00 %<>%
filter(GEO.id2 %in% qct) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(c(4:18), as.numeric) %>%
mutate_at(c(2), as.factor) %>%
mutate(H = VD03,
A = VD01 + VD10,
B = VD04 + VD11,
C = VD05 + VD12,
D = VD06 + VD13,
E = VD07 + VD14,
F = VD08 + VD15,
year = 0) %>%
gather(cat, obs, A,B,C,D,E,F,H) %>%
select(GEO.id2, obs, year, cat)
racEth <- rbind(racEth, racEth00)
racEth$GEO.id2 <- as.character(racEth$GEO.id2)
medInc$GEO.id2 <- as.character(medInc$GEO.id2)
medInc %<>% left_join(racEth, by = c("GEO.id2", "year", "cat")) %>%
left_join(inf, by = c("year")) %>%
mutate_if(is.factor, as.character) %>%
mutate_at(c(2, 4, 5), as.numeric) %>%
na.omit()
# Adjust for inflation
medInc$medInc_A <- medInc$medInc_E * inf[18,2] / medInc$cpi
# Separate white non-Hispanic from others
t1 <- subset(medInc, cat != "A" & cat != "I")
t1$flag <- ifelse(t1$cat == "H", "White Non-Hispanic", "Minority")
t1L <- split(t1, t1$flag)
t2 <- t1L[[1]] %>%
group_by(year, GEO.id2) %>%
summarize(minorityInc = weighted.mean(medInc_A, obs),
minorityPop = sum(obs))
t3 <- t1L[[2]] %>%
group_by(year, GEO.id2) %>%
summarize(whtNonHispInc = weighted.mean(medInc_A, obs),
whtNonHispPop = sum(obs))
# t2 contains white non-Hispanic vs. minority incomes by county
t2 %<>% left_join(t3, by = c("year", "GEO.id2"))
# append suburban county averages and regional averages
t3 <- rbind(filter(t2, GEO.id2 %in% c(42017, 42029, 42045, 42091)) %>%
group_by(year) %>%
summarize(GEO.id2 = "PA Suburban Counties",
whtNonHispInc = weighted.mean(whtNonHispInc, whtNonHispPop),
minorityInc = weighted.mean(minorityInc, minorityPop)),
filter(t2, GEO.id2 <= 34021) %>%
group_by(year) %>%
summarize(GEO.id2 = "NJ Suburban Counties",
whtNonHispInc = weighted.mean(whtNonHispInc, whtNonHispPop),
minorityInc = weighted.mean(minorityInc, minorityPop)))
t4 <- t2 %>%
group_by(year) %>%
summarize(GEO.id2 = "Region",
whtNonHispInc = weighted.mean(whtNonHispInc, whtNonHispPop),
minorityInc = weighted.mean(minorityInc, minorityPop))
t2 %<>% mutate_at(c(2), as.character)
final <- bind_rows(t2, t3) %>%
bind_rows(., t4) %>%
mutate(difference = whtNonHispInc - minorityInc)
final$year <- recode(final$year,"0=2000;5=2005;6=2006;7=2007;8=2008;9=2009;10=2010;11=2011;12=2012;13=2013;14=2014;15=2015;16=2016;17=2017")
colnames(final)[2] <- "geography"; final$geography <- as.factor(final$geography)
final$geography <- recode(final$geography,
"34005='Burlington';34007='Camden';34015='Gloucester';34021='Mercer';
42017='Bucks';42029='Chester';42045='Delaware';42091='Montgomery';42101='Philadelphia'")
write.csv(final[c(1:3,5,7)], "D:/alarson/TrackingProgress/IncomeTrends/outputs/medIncByRace.csv", row.names = FALSE)
# sample graph to show Ben
t1 <- filter(final, geography == "Region") %>%
select(-minorityPop, -whtNonHispPop) %>%
gather(income, val, minorityInc:whtNonHispInc)
ggplot(data = t1, aes(x = year, y = val)) +
geom_line(aes(color = income)) +
labs(title = "Sample graph of income over time",
y = "Annual median household income, 2017 USD",
x = "Year")
ggplot(data = t1, aes(x = year, y = difference)) +
geom_line(aes(color = income)) +
labs(title = "Sample graph of income over time",
y = "Annual median household income, 2017 USD",
x = "Year")
View(t1)
ggplot(data = t1, aes(x = year, y = difference)) +
geom_line() +
labs(title = "Sample graph of income over time",
y = "Annual median household income, 2017 USD",
x = "Year")
# transform data for web applications
wide1 <- spread(final, geography, minorityInc) %>%
select(-minorityPop, -whtNonHispInc, -whtNonHispPop, difference) %>%
group_by(year) %>%
summarise_all(max, na.rm = TRUE) %>%
select_at(c(2:13), ~sub("$", "_minorityInc", .)) %>%
mutate(year = c(2000, 2005:2017))
wide2 <- spread(final, geography, whtNonHispInc) %>%
select(-minorityPop, -minorityInc, -whtNonHispPop, difference) %>%
group_by(year) %>%
summarise_all(max, na.rm = TRUE) %>%
select_at(c(2:13), ~sub("$", "_whtNonHispInc", .)) %>%
mutate(year = c(2000, 2005:2017))
wide3 <- spread(final, geography, difference) %>%
select(-minorityPop, -minorityInc, -whtNonHispPop, -whtNonHispInc) %>%
group_by(year) %>%
summarise_all(max, na.rm = TRUE) %>%
select_at(c(2:13), ~sub("$", "_difference", .)) %>%
mutate(year = c(2000, 2005:2017))
View(wide3)
res <- left_join(wide1, wide2, by = "year") %>%
left_join(., wide3, by = "year")
write.csv(res, "D:/alarson/TrackingProgress/IncomeTrends/outputs/medIncByRace_wide.csv", row.names = FALSE)
View(wide3)
View(wide1)
View(wide2)
View(final)
View(wide1)
# transform data for web applications
wide1 <- spread(final, geography, minorityInc) #%>%
View(wide1)
# transform data for web applications
wide1 <- spread(final, geography, minorityInc) %>%
select(-minorityPop, -whtNonHispInc, -whtNonHispPop, difference) #%>%
# transform data for web applications
wide1 <- spread(final, geography, minorityInc) %>%
select(-minorityPop, -whtNonHispInc, -whtNonHispPop, -difference) %>%
group_by(year) %>%
summarise_all(max, na.rm = TRUE) %>%
select_at(c(2:13), ~sub("$", "_minorityInc", .)) %>%
mutate(year = c(2000, 2005:2017))
wide2 <- spread(final, geography, whtNonHispInc) %>%
select(-minorityPop, -minorityInc, -whtNonHispPop, -difference) %>%
group_by(year) %>%
summarise_all(max, na.rm = TRUE) %>%
select_at(c(2:13), ~sub("$", "_whtNonHispInc", .)) %>%
mutate(year = c(2000, 2005:2017))
wide3 <- spread(final, geography, difference) %>%
select(-minorityPop, -minorityInc, -whtNonHispPop, -whtNonHispInc) %>%
group_by(year) %>%
summarise_all(max, na.rm = TRUE) %>%
select_at(c(2:13), ~sub("$", "_difference", .)) %>%
mutate(year = c(2000, 2005:2017))
res <- left_join(wide1, wide2, by = "year") %>%
left_join(., wide3, by = "year")
write.csv(res, "D:/alarson/TrackingProgress/IncomeTrends/outputs/medIncByRace_wide.csv", row.names = FALSE)
